{"ast":null,"code":"var _jsxFileName = \"/Users/flamurmaliqi/git/VGIChallenge/VGI-Challenge-Frontend/src/components/ConnectionList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useRef, useState } from 'react';\nimport '../css/connection-list.css';\nimport Loader from \"./Loader\";\nimport { LoadingContext } from \"../contexts/LoadingContext\";\nimport { ConnectionContext } from \"../contexts/ConnectionContext\";\nimport Connection from \"./Connection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConnectionList() {\n  _s();\n  const {\n    isLoading\n  } = useContext(LoadingContext);\n  const {\n    isFirstSearch,\n    departure,\n    setDeparture,\n    arrival,\n    setArrival,\n    connections,\n    setConnections,\n    setSelectedConnection,\n    findConnections\n  } = useContext(ConnectionContext);\n  const [isSorted, setIsSorted] = useState(false);\n  const [isHideBlocked, setIsHideBlocked] = useState(false);\n  const originalConnections = useRef(connections); // Store the original order using useRef\n\n  const toggleSortByOccupation = () => {\n    if (isSorted) {\n      // If already sorted, restore original order\n      setConnections([...originalConnections.current]);\n    } else {\n      // Sort by expectedOccupation ascending\n      // Sort by the highest expected occupation within each connection\n      setConnections([...connections].sort((a, b) => {\n        const maxOccupationA = Math.max(...a.connectionSegments.map(seg => seg.expectedOccupation));\n        const maxOccupationB = Math.max(...b.connectionSegments.map(seg => seg.expectedOccupation));\n        return maxOccupationA - maxOccupationB;\n      }));\n    }\n    setIsSorted(!isSorted); // Toggle the state\n  };\n  const toggleHideBooked = () => {\n    setIsHideBlocked(!isHideBlocked);\n  };\n  const fetchEarlierConnections = () => {\n    // TODO FIX\n    if (departure != null) {\n      const departureDate = new Date(departure);\n      departureDate.setHours(departureDate.getHours() - 1);\n      setDeparture(departureDate);\n      // Call API\n      findConnections(true);\n    } else if (arrival != null) {\n      const arrivalDate = new Date(arrival);\n      arrivalDate.setHours(arrivalDate.getHours() - 1);\n      setArrival(arrivalDate);\n      // Call API\n      findConnections(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connection-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"horizontal-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horizontal-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"vgi-logo-mark\",\n          src: `${process.env.PUBLIC_URL}/images/vgi-logo-mark.svg`,\n          alt: \"VGI Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Verbindungen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horizontal-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `button-secondary ${isHideBlocked ? 'active' : ''}`,\n          disabled: connections.length === 0,\n          onClick: toggleHideBooked,\n          children: \"Nur buchbar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `button-secondary ${isSorted ? 'active' : ''}`,\n          disabled: connections.length === 0,\n          onClick: toggleSortByOccupation,\n          children: \"Geringste Auslastung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-secondary\",\n          disabled: isFirstSearch,\n          onClick: fetchEarlierConnections,\n          children: \"Fr\\xFCher\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), (connections.length === 0 && !isFirstSearch || connections.filter(connection => !isHideBlocked || !connection.isBlocked).length === 0) && !isFirstSearch ? /*#__PURE__*/_jsxDEV(Loader, {\n      msg: \"Keine verfÃ¼gbaren Verbindungen gefunden. Bitte versuchen Sie einen anderen Zeitraum oder andere Haltestellen.\",\n      isError: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: connections.filter(connection => !isHideBlocked || !connection.isBlocked).map((connection, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Connection, {\n          connection: connection,\n          setSelectedConnection: setSelectedConnection,\n          isBookingView: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(ConnectionList, \"TQFj2W9vO9/5EgQ3YAFFwCGeWQI=\");\n_c = ConnectionList;\nexport default ConnectionList;\nvar _c;\n$RefreshReg$(_c, \"ConnectionList\");","map":{"version":3,"names":["React","useContext","useRef","useState","Loader","LoadingContext","ConnectionContext","Connection","jsxDEV","_jsxDEV","ConnectionList","_s","isLoading","isFirstSearch","departure","setDeparture","arrival","setArrival","connections","setConnections","setSelectedConnection","findConnections","isSorted","setIsSorted","isHideBlocked","setIsHideBlocked","originalConnections","toggleSortByOccupation","current","sort","a","b","maxOccupationA","Math","max","connectionSegments","map","seg","expectedOccupation","maxOccupationB","toggleHideBooked","fetchEarlierConnections","departureDate","Date","setHours","getHours","arrivalDate","className","children","src","process","env","PUBLIC_URL","alt","fileName","_jsxFileName","lineNumber","columnNumber","disabled","length","onClick","filter","connection","isBlocked","msg","isError","index","isBookingView","_c","$RefreshReg$"],"sources":["/Users/flamurmaliqi/git/VGIChallenge/VGI-Challenge-Frontend/src/components/ConnectionList.jsx"],"sourcesContent":["import React, {useContext, useRef, useState} from 'react';\nimport '../css/connection-list.css';\nimport Loader from \"./Loader\";\nimport {LoadingContext} from \"../contexts/LoadingContext\";\nimport {ConnectionContext} from \"../contexts/ConnectionContext\";\nimport Connection from \"./Connection\";\n\nfunction ConnectionList() {\n    const { isLoading } = useContext(LoadingContext);\n    const { isFirstSearch, departure, setDeparture, arrival, setArrival, connections, setConnections, setSelectedConnection, findConnections} = useContext(ConnectionContext);\n    const [isSorted, setIsSorted] = useState(false);\n    const [isHideBlocked, setIsHideBlocked] = useState(false);\n\n    const originalConnections = useRef(connections); // Store the original order using useRef\n\n    const toggleSortByOccupation = () => {\n        if (isSorted) {\n            // If already sorted, restore original order\n            setConnections([...originalConnections.current]);\n        } else {\n            // Sort by expectedOccupation ascending\n            // Sort by the highest expected occupation within each connection\n            setConnections([...connections].sort((a, b) => {\n                const maxOccupationA = Math.max(...a.connectionSegments.map(seg => seg.expectedOccupation));\n                const maxOccupationB = Math.max(...b.connectionSegments.map(seg => seg.expectedOccupation));\n                return maxOccupationA - maxOccupationB;\n            }));\n        }\n        setIsSorted(!isSorted); // Toggle the state\n    };\n\n    const toggleHideBooked = () => {\n        setIsHideBlocked(!isHideBlocked);\n    };\n\n    const fetchEarlierConnections = () => {\n        // TODO FIX\n        if (departure != null) {\n            const departureDate = new Date(departure);\n            departureDate.setHours(departureDate.getHours() - 1);\n            setDeparture(departureDate);\n            // Call API\n            findConnections(true)\n        } else if (arrival != null) {\n            const arrivalDate = new Date(arrival);\n            arrivalDate.setHours(arrivalDate.getHours() - 1);\n            setArrival(arrivalDate);\n            // Call API\n            findConnections(true)\n        }\n    };\n\n    return (\n        <div className=\"connection-list\">\n            <div className=\"horizontal-wrapper\">\n                <div className=\"horizontal-wrapper\">\n                    <img className=\"vgi-logo-mark\" src={`${process.env.PUBLIC_URL}/images/vgi-logo-mark.svg`} alt=\"VGI Logo\"/>\n                    <h2>Verbindungen</h2>\n                </div>\n                <div className=\"horizontal-wrapper\">\n                    <button className={`button-secondary ${isHideBlocked ? 'active' : ''}`}\n                            disabled={connections.length === 0}\n                            onClick={toggleHideBooked}>Nur buchbar\n                    </button>\n                    <button className={`button-secondary ${isSorted ? 'active' : ''}`}\n                            disabled={connections.length === 0}\n                            onClick={toggleSortByOccupation}>Geringste Auslastung\n                    </button>\n                    <button className=\"button-secondary\" disabled={isFirstSearch} onClick={fetchEarlierConnections}>FrÃ¼her</button>\n                </div>\n            </div>\n            <hr></hr>\n            {isLoading && (\n                <Loader></Loader>\n            )}\n            {/* Check if there are no connections after filtering */}\n            {((connections.length === 0 && !isFirstSearch)  ||\n            (connections.filter(connection => !isHideBlocked || !connection.isBlocked).length === 0)) && !isFirstSearch ? (\n                <Loader msg={\"Keine verfÃ¼gbaren Verbindungen gefunden. Bitte versuchen Sie einen anderen Zeitraum oder andere Haltestellen.\"} isError={true}></Loader>\n            ) : (\n                <ul>\n                    {connections\n                        .filter(connection => !isHideBlocked || !connection.isBlocked)\n                        .map((connection, index) => (\n                            <li key={index}>\n                                <Connection connection={connection} setSelectedConnection={setSelectedConnection} isBookingView={false} />\n                            </li>\n                        ))\n                    }\n                </ul>\n            )}\n        </div>\n    );\n}\n\nexport default ConnectionList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}