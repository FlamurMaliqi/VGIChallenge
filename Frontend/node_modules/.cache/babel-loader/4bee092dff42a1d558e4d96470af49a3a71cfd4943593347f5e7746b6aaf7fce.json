{"ast":null,"code":"import moment from \"moment-timezone\";\nconst API_URL = process.env.REACT_APP_API_URL;\nfunction formatDate(date) {\n  return moment(date).tz(\"Europe/Berlin\", true).format(\"YYYY-MM-DDTHH:mm:ssZ\");\n}\nexport async function getStops() {\n  try {\n    const response = await fetch(`${API_URL}/v1/connections/stops`);\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(`Failed to fetch stations: ${errorData.message || response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching stations:\", error.message);\n    return [];\n  }\n}\nexport async function getBookings(timestamp = null) {\n  try {\n    // Build the URL with the optional timestamp parameter\n    const url = new URL(`${API_URL}/v1/bookings`);\n    url.searchParams.append('timestamp', formatDate(new Date()));\n\n    // Perform the fetch request\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(`Failed to fetch bookings: ${errorData.message || response.statusText}`);\n    }\n\n    // Return the bookings as JSON\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching bookings:\", error.message);\n    return [];\n  }\n}\nexport async function findConnections(fromStop, toStop, departure, arrival, pax) {\n  try {\n    const response = await fetch(`${API_URL}/v1/connections`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        fromStopName: Object.keys(fromStop)[0],\n        fromCoordinates: {\n          latitude: Object.values(fromStop)[0].latitude,\n          longitude: Object.values(fromStop)[0].longitude\n        },\n        toStopName: Object.keys(toStop)[0],\n        toCoordinates: {\n          latitude: Object.values(toStop)[0].latitude,\n          longitude: Object.values(toStop)[0].longitude\n        },\n        departure: departure,\n        arrival: arrival,\n        pax: pax\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(`Failed to fetch connections: ${errorData.message || response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching connections:\", error.message);\n    return [];\n  }\n}\nexport async function bookConnection(connection, pax, contact) {\n  try {\n    console.log(JSON.stringify({\n      connection: connection,\n      pax: pax,\n      contact: contact\n    }));\n    const response = await fetch(`${API_URL}/v1/bookings`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        connection: connection,\n        pax: pax,\n        contact: contact\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(`Failed to book connection: ${errorData.message || response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error posting bus booking request:\", error.message);\n    return null;\n  }\n}","map":{"version":3,"names":["moment","API_URL","process","env","REACT_APP_API_URL","formatDate","date","tz","format","getStops","response","fetch","ok","errorData","json","Error","message","statusText","error","console","getBookings","timestamp","url","URL","searchParams","append","Date","findConnections","fromStop","toStop","departure","arrival","pax","method","headers","body","JSON","stringify","fromStopName","Object","keys","fromCoordinates","latitude","values","longitude","toStopName","toCoordinates","bookConnection","connection","contact","log"],"sources":["/Users/flamurmaliqi/git/VGIChallenge/VGI-Challenge-Frontend/src/api.js"],"sourcesContent":["import moment from \"moment-timezone\";\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nfunction formatDate(date) {\n    return moment(date).tz(\"Europe/Berlin\", true).format(\"YYYY-MM-DDTHH:mm:ssZ\");\n}\n\nexport async function getStops() {\n    try {\n        const response = await fetch(`${API_URL}/v1/connections/stops`);\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(`Failed to fetch stations: ${errorData.message || response.statusText}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching stations:\", error.message);\n        return [];\n    }\n}\n\nexport async function getBookings(timestamp = null) {\n    try {\n        // Build the URL with the optional timestamp parameter\n        const url = new URL(`${API_URL}/v1/bookings`);\n        url.searchParams.append('timestamp', formatDate(new Date()));\n\n        // Perform the fetch request\n        const response = await fetch(url);\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(`Failed to fetch bookings: ${errorData.message || response.statusText}`);\n        }\n\n        // Return the bookings as JSON\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching bookings:\", error.message);\n        return [];\n    }\n}\n\n\nexport async function findConnections(fromStop, toStop, departure, arrival, pax) {\n    try {\n        const response = await fetch(`${API_URL}/v1/connections`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                fromStopName: Object.keys(fromStop)[0],\n                fromCoordinates: {\n                    latitude: Object.values(fromStop)[0].latitude,\n                    longitude: Object.values(fromStop)[0].longitude\n                },\n                toStopName: Object.keys(toStop)[0],\n                toCoordinates: {\n                    latitude: Object.values(toStop)[0].latitude,\n                    longitude: Object.values(toStop)[0].longitude\n                },\n                departure: departure,\n                arrival: arrival,\n                pax: pax\n            }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(`Failed to fetch connections: ${errorData.message || response.statusText}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching connections:\", error.message);\n        return [];\n    }\n}\n\nexport async function bookConnection(connection, pax, contact) {\n    try {\n        console.log(JSON.stringify({\n            connection: connection,\n            pax: pax,\n            contact: contact\n        }))\n        const response = await fetch(`${API_URL}/v1/bookings`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                connection: connection,\n                pax: pax,\n                contact: contact\n            }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(`Failed to book connection: ${errorData.message || response.statusText}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error posting bus booking request:\", error.message);\n        return null;\n    }\n}\n\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,iBAAiB;AAEpC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,SAASC,UAAUA,CAACC,IAAI,EAAE;EACtB,OAAON,MAAM,CAACM,IAAI,CAAC,CAACC,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC,CAACC,MAAM,CAAC,sBAAsB,CAAC;AAChF;AAEA,OAAO,eAAeC,QAAQA,CAAA,EAAG;EAC7B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,uBAAuB,CAAC;IAE/D,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAAC,6BAA6BF,SAAS,CAACG,OAAO,IAAIN,QAAQ,CAACO,UAAU,EAAE,CAAC;IAC5F;IAEA,OAAO,MAAMP,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACF,OAAO,CAAC;IACxD,OAAO,EAAE;EACb;AACJ;AAEA,OAAO,eAAeI,WAAWA,CAACC,SAAS,GAAG,IAAI,EAAE;EAChD,IAAI;IACA;IACA,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAC,GAAGtB,OAAO,cAAc,CAAC;IAC7CqB,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,WAAW,EAAEpB,UAAU,CAAC,IAAIqB,IAAI,CAAC,CAAC,CAAC,CAAC;;IAE5D;IACA,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAACW,GAAG,CAAC;IAEjC,IAAI,CAACZ,QAAQ,CAACE,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAAC,6BAA6BF,SAAS,CAACG,OAAO,IAAIN,QAAQ,CAACO,UAAU,EAAE,CAAC;IAC5F;;IAEA;IACA,OAAO,MAAMP,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACF,OAAO,CAAC;IACxD,OAAO,EAAE;EACb;AACJ;AAGA,OAAO,eAAeW,eAAeA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,OAAO,EAAEC,GAAG,EAAE;EAC7E,IAAI;IACA,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,iBAAiB,EAAE;MACtDgC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,YAAY,EAAEC,MAAM,CAACC,IAAI,CAACZ,QAAQ,CAAC,CAAC,CAAC,CAAC;QACtCa,eAAe,EAAE;UACbC,QAAQ,EAAEH,MAAM,CAACI,MAAM,CAACf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACc,QAAQ;UAC7CE,SAAS,EAAEL,MAAM,CAACI,MAAM,CAACf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACgB;QAC1C,CAAC;QACDC,UAAU,EAAEN,MAAM,CAACC,IAAI,CAACX,MAAM,CAAC,CAAC,CAAC,CAAC;QAClCiB,aAAa,EAAE;UACXJ,QAAQ,EAAEH,MAAM,CAACI,MAAM,CAACd,MAAM,CAAC,CAAC,CAAC,CAAC,CAACa,QAAQ;UAC3CE,SAAS,EAAEL,MAAM,CAACI,MAAM,CAACd,MAAM,CAAC,CAAC,CAAC,CAAC,CAACe;QACxC,CAAC;QACDd,SAAS,EAAEA,SAAS;QACpBC,OAAO,EAAEA,OAAO;QAChBC,GAAG,EAAEA;MACT,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,CAACtB,QAAQ,CAACE,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAAC,gCAAgCF,SAAS,CAACG,OAAO,IAAIN,QAAQ,CAACO,UAAU,EAAE,CAAC;IAC/F;IAEA,OAAO,MAAMP,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACF,OAAO,CAAC;IAC3D,OAAO,EAAE;EACb;AACJ;AAEA,OAAO,eAAe+B,cAAcA,CAACC,UAAU,EAAEhB,GAAG,EAAEiB,OAAO,EAAE;EAC3D,IAAI;IACA9B,OAAO,CAAC+B,GAAG,CAACd,IAAI,CAACC,SAAS,CAAC;MACvBW,UAAU,EAAEA,UAAU;MACtBhB,GAAG,EAAEA,GAAG;MACRiB,OAAO,EAAEA;IACb,CAAC,CAAC,CAAC;IACH,MAAMvC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,cAAc,EAAE;MACnDgC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBW,UAAU,EAAEA,UAAU;QACtBhB,GAAG,EAAEA,GAAG;QACRiB,OAAO,EAAEA;MACb,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,CAACvC,QAAQ,CAACE,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAAC,8BAA8BF,SAAS,CAACG,OAAO,IAAIN,QAAQ,CAACO,UAAU,EAAE,CAAC;IAC7F;IAEA,OAAO,MAAMP,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAACF,OAAO,CAAC;IAClE,OAAO,IAAI;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}