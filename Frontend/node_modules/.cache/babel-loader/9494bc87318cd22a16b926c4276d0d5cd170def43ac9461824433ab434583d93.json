{"ast":null,"code":"var _jsxFileName = \"/Users/flamurmaliqi/git/VGIChallenge/VGI-Challenge-Frontend/src/contexts/AdminContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport * as api from '../api';\nimport { LoadingContext } from \"./LoadingContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AdminContext = /*#__PURE__*/createContext();\nexport const AdminContextProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    setIsLoading,\n    setIsLoadingError,\n    setLoadingMessage\n  } = useContext(LoadingContext);\n  const [bookings, setBookings] = useState([]);\n  useEffect(() => {\n    async function getBookings() {\n      setIsLoadingError(false);\n      setLoadingMessage(\"Buchungen ab dem heutigem Datum werden geladen...\");\n      setIsLoading(true);\n      try {\n        setLoadingMessage(\"Buchungen ab dem heutigem Datum werden geladen...\");\n        const fetchedBookings = await api.getBookings();\n        if (fetchedBookings == null) {\n          setIsLoadingError(true);\n          setLoadingMessage(\"Buchungen konnten nicht geladen werden...\");\n        } else {\n          setBookings(fetchedBookings);\n          setIsLoading(false);\n        }\n      } catch (error) {\n        setIsLoadingError(true);\n        setLoadingMessage(\"Ein unerwarteter Fehler ist aufgetreten. Bitte 端berpr端fen Sie Ihre Netzwerkverbindung.\");\n        console.log(error);\n      }\n    }\n    getBookings();\n  }, []); // Empty dependency array means this runs only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(AdminContext.Provider, {\n    value: {\n      bookings,\n      setBookings\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminContextProvider, \"cw45F8Tb+0hIUuaw1YAqpFy5HX0=\");\n_c = AdminContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AdminContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","api","LoadingContext","jsxDEV","_jsxDEV","AdminContext","AdminContextProvider","children","_s","setIsLoading","setIsLoadingError","setLoadingMessage","bookings","setBookings","getBookings","fetchedBookings","error","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/flamurmaliqi/git/VGIChallenge/VGI-Challenge-Frontend/src/contexts/AdminContext.js"],"sourcesContent":["import React, {createContext, useContext, useEffect, useState} from 'react';\nimport * as api from '../api';\nimport {LoadingContext} from \"./LoadingContext\";\n\nexport const AdminContext = createContext();\n\nexport const AdminContextProvider = ({ children }) => {\n    const { setIsLoading, setIsLoadingError, setLoadingMessage } = useContext(LoadingContext);\n    const [bookings, setBookings] = useState([]);\n\n    useEffect(() => {\n        async function getBookings() {\n            setIsLoadingError(false);\n            setLoadingMessage(\"Buchungen ab dem heutigem Datum werden geladen...\");\n            setIsLoading(true);\n            try {\n                setLoadingMessage(\"Buchungen ab dem heutigem Datum werden geladen...\");\n                const fetchedBookings = await api.getBookings();\n                if (fetchedBookings == null) {\n                    setIsLoadingError(true);\n                    setLoadingMessage(\"Buchungen konnten nicht geladen werden...\");\n                } else {\n                    setBookings(fetchedBookings);\n                    setIsLoading(false);\n                }\n            } catch (error) {\n                setIsLoadingError(true);\n                setLoadingMessage(\"Ein unerwarteter Fehler ist aufgetreten. Bitte 端berpr端fen Sie Ihre Netzwerkverbindung.\")\n                console.log(error);\n            }\n        }\n        getBookings();\n    }, []);  // Empty dependency array means this runs only once when the component mounts\n\n\n    return (\n        <AdminContext.Provider value={{bookings, setBookings}}>\n            {children}\n        </AdminContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC3E,OAAO,KAAKC,GAAG,MAAM,QAAQ;AAC7B,SAAQC,cAAc,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,YAAY,gBAAGR,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMS,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM;IAAEC,YAAY;IAAEC,iBAAiB;IAAEC;EAAkB,CAAC,GAAGb,UAAU,CAACI,cAAc,CAAC;EACzF,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,eAAee,WAAWA,CAAA,EAAG;MACzBJ,iBAAiB,CAAC,KAAK,CAAC;MACxBC,iBAAiB,CAAC,mDAAmD,CAAC;MACtEF,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACAE,iBAAiB,CAAC,mDAAmD,CAAC;QACtE,MAAMI,eAAe,GAAG,MAAMd,GAAG,CAACa,WAAW,CAAC,CAAC;QAC/C,IAAIC,eAAe,IAAI,IAAI,EAAE;UACzBL,iBAAiB,CAAC,IAAI,CAAC;UACvBC,iBAAiB,CAAC,2CAA2C,CAAC;QAClE,CAAC,MAAM;UACHE,WAAW,CAACE,eAAe,CAAC;UAC5BN,YAAY,CAAC,KAAK,CAAC;QACvB;MACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZN,iBAAiB,CAAC,IAAI,CAAC;QACvBC,iBAAiB,CAAC,wFAAwF,CAAC;QAC3GM,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ;IACAF,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAGT,oBACIV,OAAA,CAACC,YAAY,CAACc,QAAQ;IAACC,KAAK,EAAE;MAACR,QAAQ;MAAEC;IAAW,CAAE;IAAAN,QAAA,EACjDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAAChB,EAAA,CAlCWF,oBAAoB;AAAAmB,EAAA,GAApBnB,oBAAoB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}