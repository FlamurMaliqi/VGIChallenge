{"ast":null,"code":"var _jsxFileName = \"/Users/flamurmaliqi/git/VGIChallenge/VGI-Challenge-Frontend/src/components/Connection.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/connection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Connection({\n  connection,\n  setSelectedConnection,\n  isBookingView\n}) {\n  _s();\n  const navigate = useNavigate();\n  const navigateToBooking = connection => {\n    setSelectedConnection(connection);\n    navigate(\"/buchen\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `connection-item ${connection.isBlocked ? \"blocked\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-grid\",\n      children: connection.connectionSegments && connection.connectionSegments.map((segment, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"horizontal-wrapper flex-start stop-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: new Date(segment.fromStop.departure).toLocaleTimeString('de-DE', {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: segment.fromStop.stopName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertical-wrapper connection-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"horizontal-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"pill purple\",\n              children: [\"Linie \", segment.routeShortName, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"arrow\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 98\n              }, this), \" \", segment.tripHeadsign]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }, this), segment.isBlocked && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"pill red\",\n              children: \"Nicht verf\\xFCgbar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this), !segment.isBlocked && segment.expectedOccupation > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `pill ${segment.expectedOccupation >= 70 ? 'red' : ''}`,\n            children: [\"Erwartete Auslastung: \", segment.expectedOccupation, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"horizontal-wrapper flex-start stop-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: new Date(segment.toStop.arrival).toLocaleTimeString('de-DE', {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: segment.toStop.stopName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), !isBookingView && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"horizontal-wrapper connection-button-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"connection-button\",\n        disabled: connection.isBlocked,\n        onClick: () => navigateToBooking(connection),\n        children: connection.isBlocked ? 'Nicht verfügbar' : 'Buchen'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(Connection, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Connection;\nexport default Connection;\nvar _c;\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","Connection","connection","setSelectedConnection","isBookingView","_s","navigate","navigateToBooking","className","isBlocked","children","connectionSegments","map","segment","index","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","Date","fromStop","departure","toLocaleTimeString","hour","minute","stopName","routeShortName","tripHeadsign","expectedOccupation","toStop","arrival","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/flamurmaliqi/git/VGIChallenge/VGI-Challenge-Frontend/src/components/Connection.jsx"],"sourcesContent":["import React from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport '../css/connection.css';\n\n\nfunction Connection({ connection, setSelectedConnection, isBookingView }) {\n\n    const navigate = useNavigate();\n\n    const navigateToBooking = (connection) => {\n        setSelectedConnection(connection);\n        navigate(\"/buchen\");\n    };\n\n    return (\n        <div className={`connection-item ${connection.isBlocked ? \"blocked\" : \"\"}`}>\n            <div className=\"connection-grid\">\n                {connection.connectionSegments && connection.connectionSegments.map((segment, index) => (\n                        <React.Fragment key={index}>\n                            {/* From Stop Time and Name */}\n                            <div className=\"dot\"></div>\n                            <div className=\"horizontal-wrapper flex-start stop-info\">\n                                {/* span className=\"pill time\" */}\n                                <span>\n                                    {new Date(segment.fromStop.departure).toLocaleTimeString('de-DE', {\n                                        hour: '2-digit',\n                                        minute: '2-digit'\n                                    })}\n                                </span>\n                                {/* span className=\"pill stop-name\" */}\n                                <span>{segment.fromStop.stopName}</span>\n                            </div>\n\n                            {/* Route/Bus Name, Direction and expected Occupation */}\n                            <div className=\"line\"></div>\n                            <div className=\"vertical-wrapper connection-info\">\n                                <div className=\"horizontal-wrapper\">\n                                    <span className=\"pill purple\">Linie {segment.routeShortName} <span className=\"arrow\">→</span> {segment.tripHeadsign}</span>\n                                    {segment.isBlocked && (\n                                        <span\n                                            className=\"pill red\">Nicht verfügbar</span>\n                                    )}\n                                </div>\n                                {!segment.isBlocked && segment.expectedOccupation > 0 && (\n                                    <span className={`pill ${segment.expectedOccupation >= 70 ? 'red' : ''}`}>\n                                    Erwartete Auslastung: {segment.expectedOccupation}%</span>\n                                )}\n\n                            </div>\n\n                            {/* To Stop Time and Name */}\n                            <div className=\"dot\"></div>\n                            <div className=\"horizontal-wrapper flex-start stop-info\">\n                                {/* span className=\"pill time\" */}\n                                <span>\n                                    {new Date(segment.toStop.arrival).toLocaleTimeString('de-DE', {\n                                        hour: '2-digit',\n                                        minute: '2-digit'\n                                    })}\n                                </span>\n                                {/* span className=\"pill stop-name\" */}\n                                <span>{segment.toStop.stopName}</span>\n                            </div>\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            {/* Buttons */}\n            { !isBookingView && (\n                <div className=\"horizontal-wrapper connection-button-wrapper\">\n                    <button\n                        className=\"connection-button\"\n                        disabled={connection.isBlocked}\n                        onClick={() => navigateToBooking(connection)}\n                    >\n                        {connection.isBlocked ? 'Nicht verfügbar' : 'Buchen'}\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Connection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}